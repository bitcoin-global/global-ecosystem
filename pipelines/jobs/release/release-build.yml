---
### Resource overrides
meta_plan:
  release-config: &release-config
    image: builder
    timeout: 4h
    privileged: true
    <: (( inject meta.release-params ))

  vm-control-config: &vm-control-config
    image: builder
    timeout: 20m
    privileged: true
    <: (( inject meta.release-params ))

  boot-vm:
    - (( grab meta.configure_gcloud ))
    - (( grab meta.make_builder ))

  build-release:
    - (( grab meta.configure_git ))
    - (( grab meta.configure_gcloud ))
    - (( grab meta.wait_for_builder ))
    - (( grab meta.get_version ))
    - (( join "\n" meta.builder_run ))

  shutdown-vm:
    - (( grab meta.configure_gcloud ))
    - |
      # Power Off Builder VM on GCP
      bitcoin-infra/scripts/remove-vm.sh \
        --name="$BUILDER_VM_NAME" \
        --zone="$BUILDER_VM_ZONE"

### Pipeline config
jobs:
- name: build-releases
  build_logs_to_retain: 3
  serial: true
  plan:
  - in_parallel:
    - get: bitcoin-global
      passed: [provision-build-vm]
      trigger: true
    - get: builder
      passed: [provision-build-vm]
    - get: bitcoin-infra
      passed: [provision-build-vm]

  - task: Boot Build VM
    <<: *vm-control-config
    config:
      platform: linux
      inputs:
        - name: bitcoin-global
      run:
        user: root
        path: bash
        args:
          - -exc
          - (( join "\n" meta_plan.boot-vm ))

  - task: Build release candidates
    <<: *release-config
    config:
      platform: linux
      inputs:
        - name: bitcoin-global
      run:
        user: root
        path: bash
        args:
          - -exc
          - (( join "\n" meta_plan.build-release ))
  
  # Whatever happens, make sure we have switched off the VM for cost reduction
  ensure: &shudown
    task: Shutdown Build VM
    <<: *vm-control-config
    config:
      platform: linux
      inputs:
        - name: builder
        - name: bitcoin-infra
      run:
        user: root
        path: bash
        args:
          - -exc
          - (( join "\n" meta_plan.shutdown-vm ))
