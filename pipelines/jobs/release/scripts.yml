---
meta:
  get_btg_version: &get_btg_version |
    ### Get Bitcoin Global commited tag to build
    TEMP_TAG=$(grep -e "$(cat ./bitcoin-global/.git/HEAD)" ./bitcoin-global/.git/packed-refs | head -n1 | cut -d ' ' -f 2)
    export GITHUB_TAG=${TEMP_TAG##*/}
    export BITGLOBAL_VERSION=$(echo "$GITHUB_TAG" | cut -f1 -d"-")

  import_gpg: &import_gpg |
    ### Import and unlock GPG key
    echo "TEMP" > ~/temp.txt
    mkdir -p ~/.gpg
    echo "${RELEASE_CERT}" > ~/.gpg/cert.pem
    echo "${RELEASE_KEY}" > ~/.gpg/cert_key.pem
    echo "${GPG_PUBLIC}" | base64 -d > ~/.gpg/public.key
    echo "${GPG_PRIVATE}" | base64 -d > ~/.gpg/private.key
    echo "${GPG_SUBKEY}" | base64 -d > ~/.gpg/sub.key
    gpg --import ~/.gpg/public.key
    gpg --import ~/.gpg/private.key
    gpg --import ~/.gpg/sub.key
    rm -rf ~/temp*

  prepare_machine: &prepare_machine |
    ### Download system dependencies
    echo "Prepare machine"
    apt-get update
    apt-get upgrade -y
    apt-get install -y \
      gnupg2 ca-certificates git software-properties-common \
      python3.6 sudo nano apt-cacher-ng ruby make wget curl pigz \
      build-essential autoconf libssl1.0-dev
    service apt-cacher-ng restart

    ### Install Docker
    # curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    # add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    # apt-get update -y
    # apt-get install -y docker-ce

    ### Install monitoring
    echo "Install monitoring"
    if [ ! -f /opt/netdata/usr/bin/netdata-claim.sh ]; then
      bash <(curl -Ss https://my-netdata.io/kickstart-static64.sh) --dont-wait --no-updates --stable-channel --disable-telemetry
    fi
    /opt/netdata/usr/bin/netdata-claim.sh -token=${NETDATA_INFRA_TOKEN} -rooms=${NETDATA_INFRA_ROOM} -url=https://app.netdata.cloud || echo "Already claimed"

    ### Install OSSLSIGNCODE
    mkdir ~/tmp-tools && cd ~/tmp-tools
    wget https://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz
    wget https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch
    
    tar xf osslsigncode-1.7.1.tar.gz
    cd osslsigncode-1.7.1
    patch -p1 < ../osslsigncode-Backports-to-1.7.1.patch
    ./configure --without-gsf --without-curl --disable-dependency-tracking
    make && make install
    cd ~/tmp-tools/

    ### Install GHR
    wget https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz -O ghr.tar.gz
    tar xzf ghr.tar.gz
    mv ghr_v0.13.0_linux_amd64/ghr /usr/bin/ghr
    rm -r ghr.tar.gz ghr_v0.13.0_linux_amd64/

    ### Back to path
    cd ~/

  gitian_dependencies: &gitian_dependencies |
    ### Download dependencies
    mkdir -p ./gitian-builder/inputs
    curl -L https://github.com/phracker/MacOSX-SDKs/releases/download/10.13/MacOSX10.11.sdk.tar.xz \
      --output ./gitian-builder/inputs/MacOSX10.11.sdk.tar.gz

  release_setup: &release_setup |
    echo "Setup release build configuration for $GITHUB_TAG"
    
    ### Configure Bitcoin Global builder
    rm -rf ./tmp-bitcoin-global
    git clone https://github.com/bitcoin-global/bitcoin-global.git ./tmp-bitcoin-global
    cp ./tmp-bitcoin-global/contrib/gitian-build.py ./gitian-build.py
    chmod u+x ./gitian-build.py
    rm -rf ./tmp-bitcoin-global

    ### Run builder setup
    rm -rf ./gitian-builder
    ./gitian-build.py --commit --setup fhivemind $GITHUB_TAG

  build_bitcoin: &build_bitcoin |
    ### Build releases
    ./gitian-build.py -o $RELEASE_TYPE --commit -j $BUILDER_CPUS -m $BUILDER_RAM_MEMORY -b fhivemind $GITHUB_TAG
    
  make_builder: &make_builder |
    ### Deploy Builder VM on GCP
    global-ecosystem/scripts/add-vm.sh \
      --name="$MACHINE_NAME" \
      --zone="$MACHINE_ZONE" \
      --size="$MACHINE_SIZE" \
      --disk-size="$MACHINE_DISK_SIZE" \
      --disk-type="$MACHINE_DISK_TYPE"

  wait_for_builder: &wait_for_builder |
    ### Wait until Build VM stable
    echo "Waiting until VM operational..."
    counter=0
    until gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT --command 'echo'; do
        counter=$((counter+1))
        if [[ "$counter" -gt 120 ]]; then
            echo "Timed out!"
            exit 1
        fi
        sleep 1
    done
    echo "Success!"

  setup_builder: &setup_builder
    - gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT <<ENDSSH
    - (( grab meta.configure_shared ))
    - (( grab meta.prepare_machine ))
    - (( grab meta.configure_git ))
    - (( grab meta.import_gpg ))
    - (( grab meta.release_setup ))
    - (( grab meta.gitian_dependencies ))
    - shutdown --reboot 1 && exit
    - ENDSSH

  builder_bitcoin: &builder_bitcoin
    - gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT <<ENDSSH
    - (( grab meta.configure_shared ))
    - (( grab meta.configure_git ))
    - (( grab meta.import_gpg ))
    - (( grab meta.build_bitcoin ))
    - (( grab meta.release_bitcoin ))
    - exit
    - ENDSSH

  builder_electrum: &builder_electrum
    - gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT <<ENDSSH
    - (( grab meta.configure_shared ))
    - (( grab meta.configure_git ))
    - (( grab meta.import_gpg ))
    - (( grab meta.release_electrum ))
    - exit
    - ENDSSH

  builder_stop: &builder_stop |
    global-ecosystem/scripts/remove-vm.sh \
      --name="$MACHINE_NAME" \
      --zone="$MACHINE_ZONE"

  builder_destroy: &builder_destroy |
    global-ecosystem/scripts/remove-vm.sh \
      --name="$MACHINE_NAME" \
      --zone="$MACHINE_ZONE"
      # We won't destroy it for now, just shutdown
      # --destroy

  release_bitcoin: &release_bitcoin |
      ############################################################################################
      ### Sign Windows
      tar xf ~/gitian-builder/inputs/bitcoin-global-$BITGLOBAL_VERSION-win-unsigned.tar.gz \
          -C ~/bitcoin-binaries/$GITHUB_TAG
      mv ~/bitcoin-binaries/$GITHUB_TAG/unsigned/* ~/bitcoin-binaries/$GITHUB_TAG/
      rm -rf ~/bitcoin-binaries/$GITHUB_TAG/unsigned/ \
             ~/bitcoin-binaries/$GITHUB_TAG/win-codesign.cert \
             ~/bitcoin-binaries/$GITHUB_TAG/detached-sig-create.sh

      osslsigncode sign -certs ~/.gpg/cert.pem -key ~/.gpg/cert_key.pem \
        -n "Bitcoin Global $GITHUB_TAG" -i http://bitcoin-global.io/ \
        -in ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-win64-setup-unsigned.exe \
        -out ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-win64-setup.exe
      rm -rf ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-win64-setup-unsigned.exe

      ### Sign OSX
      mv ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-osx-unsigned.dmg \
         ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-osx.dmg || echo "OSX already present"

      ### Add Win to detached sigs
      mkdir -p ~/global.detached.sigs/win/
      osslsigncode extract-signature -pem \
        -in ~/bitcoin-binaries/$GITHUB_TAG/bitcoin-global-$BITGLOBAL_VERSION-win64-setup.exe \
        -out ~/global.detached.sigs/win/bitcoin-global-$BITGLOBAL_VERSION-win64-setup.exe.pem

      ### Add OSX to detached sigs
      # empty for now...

      ### Push detached signatures
      cd ~/global.detached.sigs
      git add .
      git branch -d $GITHUB_TAG || echo "skipping deletion"
      git push origin --delete $GITHUB_TAG || echo "skipping deletion"
      git checkout -B $GITHUB_TAG
      git commit -m "cd: Add $GITHUB_TAG detached sigs"
      if [[ "$UPLOAD_RELEASE_CONFIGS" == "true" ]]; then
        git push --set-upstream origin $GITHUB_TAG || git push
      fi

      ### Push regular signatures
      cd ~/global.gitian.sigs
      if [[ "$UPLOAD_RELEASE_CONFIGS" == "true" ]]; then
        git push
      fi

      ### Remove debug packages
      rm -rf ~/bitcoin-binaries/$GITHUB_TAG/*debug*

      ### Complete signing
      cd ~/bitcoin-binaries/$GITHUB_TAG
      shasum -a 256 bitcoin-global-* > SHA256SUMS
      gpg2 --pinentry-mode loopback --yes --clearsign --output SHA256SUMS.asc --sign SHA256SUMS
      rm -rf SHA256SUMS

      ############################################################################################
      ### Generate release report
      LAST_COMMIT=\$(git --git-dir ~/bitcoin-global/.git rev-list --ancestry-path 58ba7c314d552cea8cb024960a8504577aee586f..HEAD | tail -1)
      FROM_COMMIT=\$(git --git-dir ~/bitcoin-global/.git describe --tags --abbrev=0 || echo \$LAST_COMMIT)
      if [[ "\$FROM_COMMIT" == "v$GITHUB_TAG" ]]; then
        FROM_COMMIT="\$LAST_COMMIT"
      fi
      RELEASE_DATA=\$(git --git-dir ~/bitcoin-global/.git log \$FROM_COMMIT..HEAD --no-merges \
                  --pretty=format:'* **[\`%h\`](https://github.com/bitcoin-global/bitcoin-global/commit/%H)**  %s' \
                  -i -E --grep=".*: .*")
      COMMITTERS=\$(git --git-dir ~/bitcoin-global/.git log --format="* %an" \$FROM_COMMIT..HEAD | sort | uniq | grep -i -E -v "bitcoin-global-bot" )
      DATE=\$(date '+%Y-%m-%d')

      echo -e "## Release v$GITHUB_TAG (\$DATE)\n\n" > release.md
      echo -e "### :globe_with_meridians: Getting started\n" >> release.md
      echo -e "* [Download Bitcoin Global](https://github.com/bitcoin-global/bitcoin-global/releases/tag/v$GITHUB_TAG)" >> release.md
      echo -e "* [Install Bitcoin Global](https://bitcoin-global.io/getting-started)" >> release.md
      echo -e "* [Requirements](https://bitcoin-global.io/getting-started#requirements)" >> release.md
      echo -e "* [Release notes](https://github.com/bitcoin-global/bitcoin-global/tree/master/doc/release-notes)\n\n---\n\n" >> release.md
      echo -e "### :checkered_flag: Release notes:\n \$RELEASE_DATA\n\n" >> release.md
      echo -e "### :busts_in_silhouette: Committers:\n \$COMMITTERS\n\n---" >> release.md
      cp release.md ~/tmp-tools/release-short.md
      echo -e '### :link: Release hashes and signatures\n\n\`\`\`gpg' >> release.md
      cat ./SHA256SUMS.asc >> release.md
      echo -e '\`\`\`\n\nSigned by public key \`DC17 1097 7C99 4CF2 DD8A 59DA 9791 24CB 5F7F BF39\` (<fhivemind@users.noreply.github.com>)' >> release.md
      mv ./release.md ~/tmp-tools/release.md

      ### Publish
      ghr -t ${GITHUB_TOKEN} -u bitcoin-global -r bitcoin-global -n v$GITHUB_TAG -b "\$(cat ~/tmp-tools/release.md)" -delete v$GITHUB_TAG .

      ### Upload release notes
      cd ~/bitcoin-global
      git checkout master && git fetch && git pull
      cp ~/tmp-tools/release-short.md ./doc/release-notes/release-notes-$GITHUB_TAG.md && git add ./doc/release-notes/release-notes-$GITHUB_TAG.md
      git diff-index --quiet HEAD || git commit -m "[docs] Adding release notes for $GITHUB_TAG"
      
      # if [[ "$UPLOAD_RELEASE_CONFIGS" == "true" ]]; then
      #   git push
      # fi

  release_electrum: &release_electrum |
    ### =================================================
    ### Global config
    export ELECTRUM_VERSION=${ELECTRUM_VERSION}
    export BITCOIN_VERSION=${BITCOIN_VERSION}
    export FROM_COMMIT=${ELECTRUM_DIFF_TAG}

    ### =================================================
    ### Build releases
    rm -rf ./electrum
    git clone https://github.com/bitcoin-global/global-electrum.git ./electrum
    cd electrum/
    git tag -d \$ELECTRUM_VERSION || echo "doesn't exist"
    git tag \$ELECTRUM_VERSION || echo "same tag"
    git push -f --tags
    git checkout \$ELECTRUM_VERSION

    ### Images
    docker build -t electrum-wine-builder-img         contrib/build-wine
    docker build -t electrum-linux-builder-img        contrib/build-linux/sdist
    # docker build -t electrum-android-builder-img    contrib/android

    ### Windows
    docker run --rm \
        -v \$PWD:/opt/wine64/drive_c/electrum \
        -w /opt/wine64/drive_c/electrum/contrib/build-wine \
        --name electrum-wine-builder-cont \
        electrum-wine-builder-img \
        ./build.sh

    ### Linux
    docker run --rm \
        -v \$PWD:/opt/wine64/drive_c/electrum \
        -w /opt/wine64/drive_c/electrum/contrib/build-linux/sdist \
        --name electrum-linux-builder-cont \
        electrum-linux-builder-img \
        ./build.sh

    ## ### Android
    ## ./contrib/pull_locale
    ## ./contrib/make_packages
    ## mkdir --parents /c/repos/global-electrum/.buildozer/.gradle
    ## docker run --rm \
    ##     --name electrum-android-builder-cont \
    ##     -v /c/repos/global-electrum:/home/user/wspace/electrum \
    ##     -v /c/repos/global-electrum/.buildozer/.gradle:/home/user/.gradle \
    ##     -v ~/.keystore:/home/user/.keystore \
    ##     --workdir /home/user/wspace/electrum \
    ##     electrum-android-builder-img \
    ##     ./contrib/android/make_apk

    ### =================================================
    ### Sign and publish
    CERT_FILE=${CERT_FILE:-~/.gpg/cert.pem} \
    KEY_FILE=${KEY_FILE:-~/.gpg/cert_key.pem} \
    ./contrib/build-wine/sign.sh
    
    ### Collect binaries
    mv ./contrib/build-wine/signed/*-portable.exe ./dist/electrum-global-\${ELECTRUM_VERSION}-portable.exe || echo "Already imported"
    mv ./contrib/build-wine/signed/*-setup.exe ./dist/electrum-global-\${ELECTRUM_VERSION}-setup.exe || echo "Already imported"
    mv ./contrib/build-wine/signed/*.exe ./dist/electrum-global-\${ELECTRUM_VERSION}.exe || echo "Already imported"
    mv ./dist/*.tar.gz ./dist/electrum-global-\${ELECTRUM_VERSION}.tar.gz || echo "Already imported"

    ### Sign
    cd ./dist
    shasum -a 256 electrum-global-* > SHA256SUMS
    gpg2 --pinentry-mode loopback --yes --clearsign --output SHA256SUMS.asc --sign SHA256SUMS
    rm -rf SHA256SUMS

    ############################################################################################
    ### Generate release report
    RELEASE_DATA=\$(git log \$FROM_COMMIT..HEAD --no-merges \
                --pretty=format:'* **[\`%h\`](https://github.com/bitcoin-global/global-electrum/commit/%H)**  %s' \
                -i -E --grep=".*: .*")
    COMMITTERS=\$(git log --format="* %an" \$FROM_COMMIT..HEAD | sort | uniq | grep -i -E -v "bitcoin-global-bot" )
    DATE=\$(date '+%Y-%m-%d')

    echo -e "## Release v\$ELECTRUM_VERSION (\$DATE)\n\n" > release.md
    echo -e "### :globe_with_meridians: Getting started\n" >> release.md
    echo -e "* [Getting started](https://bitcoin-global.io/#getting-started)" >> release.md
    echo -e "* [Download Bitcoin Global](https://github.com/bitcoin-global/bitcoin-global/releases/tag/v$BITCOIN_VERSION)" >> release.md
    echo -e "* [Download Electrum Global](https://github.com/bitcoin-global/global-electrum/releases/tag/$ELECTRUM_VERSION)" >> release.md
    echo -e "* [Requirements](https://bitcoin-global.io/#requirements)" >> release.md
    echo -e "### :checkered_flag: Release notes:\n \$RELEASE_DATA\n\n" >> release.md
    echo -e "### :busts_in_silhouette: Committers:\n \$COMMITTERS\n\n---" >> release.md
    echo -e '### :link: Release hashes and signatures\n\n\`\`\`gpg' >> release.md
    cat ./SHA256SUMS.asc >> release.md
    echo -e '\`\`\`\n\nSigned by public key \`DC17 1097 7C99 4CF2 DD8A 59DA 9791 24CB 5F7F BF39\` (<fhivemind@users.noreply.github.com>)' >> release.md

    ### Publish
    ghr -t ${GITHUB_TOKEN} -u bitcoin-global -r global-electrum -n \$ELECTRUM_VERSION -b "\$(cat ./release.md)" -delete \$ELECTRUM_VERSION .
