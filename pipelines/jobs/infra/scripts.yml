---
meta:
  make_nodeinfra: &make_nodeinfra |
    ### Deploy Builder VM on GCP
    global-ecosystem/scripts/add-vm.sh \
      --name="$MACHINE_NAME" \
      --zone="$MACHINE_ZONE" \
      --size="$MACHINE_SIZE" \
      --disk-size="$MACHINE_DISK_SIZE" \
      --disk-type="$MACHINE_DISK_TYPE" \
      --tags="bitcoin-infra" \
      --static-ip

    ### Get IP
    VM_REGION=${MACHINE_ZONE:0:-2}
    ADDRESS_NAME=$MACHINE_NAME-address
    EXTERNAL_IP=$(gcloud compute addresses describe $ADDRESS_NAME --region $VM_REGION --format json | jq '.address' | tr -d '"')
    
    # Add to .io
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="@.bitcoin-global.io"

    ### Create zones
    DOMAINS=dev,co,io
    for DOMAIN in $(echo ${DOMAINS} | sed "s/,/ /g")
    do
      global-ecosystem/scripts/dns-record.sh --name="${DOMAIN}-bitcoin-global" --type="A" \
        --value="${EXTERNAL_IP}" --domain="vps.bitcoin-global.${DOMAIN}"
      global-ecosystem/scripts/dns-record.sh --name="${DOMAIN}-bitcoin-global" --type="NS" \
        --value="vps.bitcoin-global.${DOMAIN}." --domain="dnsseed.bitcoin-global.${DOMAIN}" --ttl="21600"
      global-ecosystem/scripts/dns-record.sh --name="${DOMAIN}-bitcoin-global" --type="NS" \
        --value="vps.bitcoin-global.${DOMAIN}." --domain="test-dnsseed.bitcoin-global.${DOMAIN}" --ttl="21600"
    done

  wait_for_nodeinfra: &wait_for_nodeinfra |
    ### Wait until Build VM stable
    echo "Waiting until VM operational..."
    counter=0
    until gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT --command 'echo'; do
        counter=$((counter+1))
        if [[ "$counter" -gt 120 ]]; then
            echo "Timed out!"
            exit 1
        fi
        sleep 1
    done
    echo "Success!"

  setup_nodeinfra: &setup_nodeinfra
    - gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT <<ENDSSH
    - (( grab meta.prepare_infra_node ))
    - (( grab meta.configure_git ))
    - (( grab meta.import_gpg ))
    - (( grab meta.install_required_pkg ))
    - exit
    - ENDSSH

  setup_io: &setup_io
    - gcloud beta compute ssh --zone $MACHINE_ZONE $MACHINE_NAME --project $GCP_PROJECT <<ENDSSH
    - (( grab meta.configure_git ))
    - (( grab meta.deploy-landing-page ))
    - exit
    - ENDSSH

  prepare_infra_node: &prepare_infra_node |
      ### Download system dependencies
      echo "Prepare machine"
      apt-get update
      apt-get upgrade -y
      apt-get install -y \
        gnupg2 ca-certificates git software-properties-common \
        python3.6 sudo nano ruby make wget curl pigz \
        build-essential autoconf libssl1.0-dev libboost-all-dev libssl-dev

      ### Install monitoring
      bash <(curl -Ss https://my-netdata.io/kickstart-static64.sh) --dont-wait --no-updates --stable-channel --disable-telemetry
      /opt/netdata/usr/bin/netdata-claim.sh -token=${NETDATA_INFRA_TOKEN} -rooms=${NETDATA_INFRA_ROOM} -url=https://app.netdata.cloud

  install_required_pkg: &install_required_pkg |
    ### Install aditional requirements
    apt-get autoremove -y
    apt-get install -y nodejs-dev node-gyp libssl1.0-dev
    apt-get install -y build-essential libboost-all-dev libssl-dev
    apt-get install -f -y npm
    npm install forever -g

    ### Install DNS seeder
    git clone https://github.com/bitcoin-global/global-seeder.git /global-seeder
    cd /global-seeder && make

    ### ==============================
    ### DNS SEED SERVICE CONFIGURATION
    cat <<SCRIPT > /etc/init.d/dnsseeder-startup.sh
    #!/bin/bash
    forever stopall
    #forever start /global-seeder/dnsseed -h dnsseed.bitcoin-global.io -n vps.bitcoin-global.io -m admin@bitcoin-global.io
    #forever start /global-seeder/dnsseed -h dnsseed.bitcoin-global.co -n vps.bitcoin-global.co -m admin@bitcoin-global.co
    forever start /global-seeder/dnsseed -h dnsseed.bitcoin-global.dev -n vps.bitcoin-global.dev -m admin@bitcoin-global.dev
    
    #forever start /global-seeder/dnsseed -h test-dnsseed.bitcoin-global.io -n vps.bitcoin-global.io -m admin@bitcoin-global.io --testnet
    #forever start /global-seeder/dnsseed -h test-dnsseed.bitcoin-global.co -n vps.bitcoin-global.co -m admin@bitcoin-global.co --testnet
    forever start /global-seeder/dnsseed -h test-dnsseed.bitcoin-global.dev -n vps.bitcoin-global.dev -m admin@bitcoin-global.dev --testnet
    SCRIPT
    
    chmod +x /etc/init.d/dnsseeder-startup.sh

    cat <<SRVCCFG > /etc/systemd/system/dnsseeder.service
    [Unit]
    Description=DNS Seeder
    After=network.target

    [Service]
    ExecStart=/etc/init.d/dnsseeder-startup.sh
    User=root
    LimitNOFILE=8192
    TimeoutStopSec=30min
    Restart=on-failure
    RestartSec=3

    [Install]
    WantedBy=multi-user.target
    SRVCCFG

    ### ==============================
    systemctl daemon-reload && systemctl enable dnsseeder
    systemctl daemon-reload && systemctl start dnsseeder

  import_gpg: &import_gpg |
    ### Import and unlock GPG key
    echo "TEMP" > ~/temp.txt
    mkdir -p ~/.gpg
    echo "${RELEASE_CERT}" > ~/.gpg/cert.pem
    echo "${RELEASE_KEY}" > ~/.gpg/cert_key.pem
    echo "${GPG_PUBLIC}" | base64 -d > ~/.gpg/public.key
    echo "${GPG_PRIVATE}" | base64 -d > ~/.gpg/private.key
    echo "${GPG_SUBKEY}" | base64 -d > ~/.gpg/sub.key
    gpg --import ~/.gpg/public.key
    gpg --import ~/.gpg/private.key
    gpg --import ~/.gpg/sub.key
    rm -rf ~/temp*

  deploy-landing-page: &deploy-landing-page |
    ### Install requirements
    apt update -y && apt upgrade -y
    apt install -y git python-software-properties software-properties-common nginx gcc g++ make python3-pip
    add-apt-repository ppa:certbot/certbot -y
    apt update -y && apt upgrade -y
    apt install -y python-certbot-nginx
    python3 -m pip install cffi

    ### Prepare
    cd /var/www/
    rm -rf ./bitcoin-global.io
    git clone https://github.com/bitcoin-global/bitcoin-global.io.git ./bitcoin-global.io

    ### Get certificates
    if [ ! -f /etc/letsencrypt/live/bitcoin-global.io/cert.pem ]; then
      certbot --nginx --agree-tos -n \
        -d bitcoin-global.io \
        -m admin@bitcoin-global.io
    fi
    
    ### Add configuration files
    cat <<'CERTS' > /etc/nginx/sites-available/bitcoin-global.io.conf
    server {
      server_name bitcoin-global.io;
      listen 80;
      #listen [::]:80 ipv6only=on;

      location / {
        return 301 https://bitcoin-global.io$request_uri;
      }
    }

    server {
      server_name bitcoin-global.io;
      listen 443 ssl http2;
      #listen [::]:443 ssl http2 ipv6only=on;

      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:10m;
      ssl_dhparam /etc/ssl/certs/dhparam.pem;

      ssl_certificate     /etc/letsencrypt/live/bitcoin-global.io/cert.pem;
      ssl_certificate_key /etc/letsencrypt/live/bitcoin-global.io/privkey.pem;

      root /var/www/bitcoin-global.io;
      index index.html;

      location / {
        try_files $uri $uri/ =404;
      }

      error_page 404 /404.html;
      location = /404.html {
        root /var/www/bitcoin-global.io;
        internal;
      }

      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /var/www/bitcoin-global.io;
        internal;
      }

      location ~* \.(jpg|jpeg|png|gif|ico)$ {
        expires 30d;
      }
      location ~* \.(css|js)$ {
        expires 7d;
      }
    }
    CERTS

    cd /etc/ssl/certs
    if [ ! -f dhparam.pem ]; then
      openssl dhparam -out dhparam.pem 4096
    fi

    ### Activate service
    ln -s /etc/nginx/sites-available/bitcoin-global.io.conf /etc/nginx/sites-enabled/
    rm -rf /etc/nginx/sites-enabled/default
    rm -rf /etc/nginx/sites-available/default
    fuser -k 80/tcp
    fuser -k 443/tcp

    service nginx restart
