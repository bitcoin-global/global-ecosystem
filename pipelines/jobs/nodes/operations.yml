---
meta:
  # Git and GCloud already configured for each operation
  perform_deploy: &perform_deploy
  - (( grab meta.make_node ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.install_node ))

  perform_destroy: &perform_destroy
  - (( grab meta.destroy_node ))

  perform_stop: &perform_stop
  - (( grab meta.stop_node ))

  perform_update: &perform_update
  - (( grab meta.make_node ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.update_node ))

  perform_electrum: &perform_electrum
  - (( grab meta.make_node ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.deploy_electrum ))

  prepare_node: &prepare_node |
    ### Install required packages
    echo "Prepare machine"
    apt-get update
    apt-get install -y \
      gnupg2 ca-certificates git software-properties-common \
      python3.6 sudo nano ruby wget curl pigz \
      autoconf libssl1.0-dev dirmngr gosu dnsutils gpg wget jq npm
    service apt-cacher-ng restart
    npm install forever -g

    ### Install monitoring
    echo "Install monitoring"
    bash <(curl -Ss https://my-netdata.io/kickstart-static64.sh) --dont-wait --no-updates --stable-channel --disable-telemetry
    /opt/netdata/usr/bin/netdata-claim.sh -token=${NETDATA_INFRA_TOKEN} -rooms=${NETDATA_INFRA_ROOM} -url=https://app.netdata.cloud

  post_git_ops: &post_git_ops |
    ### Install required tools
    mkdir -p /binaries
    mkdir -p /bitcoin-global
    rm -rf ./global-ecosystem
    git clone ${GIT_REPO_ECOSYSTEM} ./global-ecosystem
    chmod +x ./global-ecosystem/src/bitglobal/install-node.sh

  post_operations: &post_operations |
    ### Install blockchain explorer
    cd /
    rm -rf ./explorer
    git clone ${GIT_REPO_EXPLORER} ./explorer && cd ./explorer
    npm install

    ### Run explorer
    forever stopall
    forever start bin/cli.js --host 0.0.0.0 --port 80 \
      --bitglobd-port 18444 \
      --bitglobd-user ${BITCOIN_RPC_USERNAME} \
      --bitglobd-pass ${BITCOIN_RPC_PASSWORD}

  make_node: &make_node |
    ### Deploy Node VM on GCP
    global-ecosystem/scripts/add-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE" \
      --size="$NODE_SIZE" \
      --disk-size="$NODE_DISK_SIZE" \
      --disk-type="$NODE_DISK_TYPE" \
      --tags="bitcoin-global,bitcoin-$NODE_TYPE" \
      --static-ip

    ### Get IP
    VM_REGION=${NODE_ZONE:0:-2}
    ADDRESS_NAME=$NODE_NAME-address
    EXTERNAL_IP=$(gcloud compute addresses describe $ADDRESS_NAME --region $VM_REGION --format json | jq '.address' | tr -d '"')
    
    ### ================== Add Explorer server config
    ### Regional A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="explorer.${VM_REGION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"
    
    ### Parent A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"

    ### ================== Add ElectrumX server config
    ### Regional A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="electrumx.${VM_REGION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"
    
    ### Parent A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="electrumx.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"

  wait_for_node: &wait_for_node |
    ### Loop until ready
    echo "Waiting until VM operational..."
    counter=0
    until gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT --command 'echo'; do
        counter=$((counter+1))
        if [[ "$counter" -gt 120 ]]; then
            echo "Timed out!"
            exit 1
        fi
        sleep 1
    done
    echo "Success!"

  install_bitcoin: &install_bitcoin |
    ### Installing Bitcoin Global
    ./global-ecosystem/src/bitglobal/install-node.sh \
      -v ${BITCOIN_VERSION} -r ${BITCOIN_RELEASE} \
      -t /binaries -d ${BITCOIN_DATA_DIR}

    ### Save intro command
    export BTC_COMMAND="${BITCOIN_ENTRYPOINT}"

  update_bitcoin: &update_bitcoin |
    ### Updating Bitcoin Global
    ./global-ecosystem/src/bitglobal/install-node.sh \
      -v ${BITCOIN_UPDATE_VERSION} -r ${BITCOIN_UPDATE_RELEASE} \
      -t /binaries -d ${BITCOIN_DATA_DIR}

    ### Save intro command
    export BTC_COMMAND="${BITCOIN_UPDATE_ENTRYPOINT}"

  run_bitcoin: &run_bitcoin |
    ### Stop Bitcoin Global
    /binaries/bin/bitglob-cli stop || echo "mainnet: Already shutdown"
    /binaries/bin/bitglob-cli -testnet stop || echo "testnet: Already shutdown"
    sleep 1m

    ### Run Bitcoin Global
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf $BITCOIN_ENTRYPOINT

  update_run_bitcoin: &update_run_bitcoin |
    ### Stop Bitcoin Global
    /binaries/bin/bitglob-cli stop || echo "mainnet: Already shutdown"
    /binaries/bin/bitglob-cli -testnet stop || echo "testnet: Already shutdown"
    sleep 1m

    ### Run Bitcoin Global
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf $BITCOIN_UPDATE_ENTRYPOINT


  install_node: &install_node
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.prepare_node ))
    - (( grab meta.configure_git ))
    - (( grab meta.post_git_ops ))
    - (( grab meta.install_bitcoin ))
    - (( grab meta.generate_env_config ))
    - (( grab meta.run_bitcoin ))
    - (( grab meta.post_operations ))
    - exit
    - EOF

  update_node: &update_node
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.prepare_node ))
    - (( grab meta.configure_git ))
    - (( grab meta.post_git_ops ))
    - (( grab meta.update_bitcoin ))
    - (( grab meta.generate_env_config ))
    - (( grab meta.update_run_bitcoin ))
    - (( grab meta.post_operations ))
    - exit
    - EOF

  stop_node: &stop_node |
    ### Stop node
    ./global-ecosystem/scripts/remove-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE"

  destroy_node: &destroy_node |
    ### Destroy node
    ./global-ecosystem/scripts/remove-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE" \
      --destroy

  generate_env_config: &generate_env_config |
    ### =============================
    ### BITGLOB CONFIGURATION
    cat <<CONFIG > /binaries/.bitglobal/bitglob.conf
    listen=1
    maxconnections=64
    upnp=1
    txindex=1

    dbcache=64
    par=2
    checkblocks=24
    checklevel=0

    disablewallet=1
    datadir=${BITCOIN_DATA_DIR}

    rpcallowip=127.0.0.1
    rpcuser=${BITCOIN_RPC_USERNAME}
    rpcpassword=${BITCOIN_RPC_PASSWORD}

    [${BITCOIN_NETWORK_TYPE}]
    port=${BITCOIN_PORT}
    bind=0.0.0.0
    rpcbind=127.0.0.1
    rpcport=18444
    CONFIG

    ### =============================
    ### BITGLOB SERVICE CONFIGURATION
    cat <<SCRIPT > /etc/init.d/bitcoin-startup.sh
    #!/bin/bash
    export GITHUB_TOKEN=${GITHUB_TOKEN}
    
    ### Run Bitcoin global
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf \$BTC_COMMAND

    ### Run explorer
    forever stopall
    forever start /explorer/bin/cli.js --host 0.0.0.0 --port 80 \
      --bitglobd-port 18444 \
      --bitglobd-user ${BITCOIN_RPC_USERNAME} \
      --bitglobd-pass ${BITCOIN_RPC_PASSWORD}
    SCRIPT

    update-rc.d /etc/init.d/bitcoin-startup.sh defaults
    chmod +x /etc/init.d/bitcoin-startup.sh

  deploy_electrum: &deploy_electrum
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.configure_git ))
    - (( grab meta.electrum_config ))
    - exit
    - EOF

  electrum_config: &electrum_config |
    ### ==============================
    ### Install Electrum
    wget https://raw.githubusercontent.com/bauerj/electrumx-installer/master/bootstrap.sh -O - | \
      bash -s - \
      --leveldb \
      --update-python \
      --electrumx-git-url https://github.com/bitcoin-global/global-electrumx.git \
      --electrumx-git-branch altcoin

    ### ==============================
    ### ELECTRUM SERVICE CONFIGURATION
    cat <<SERVICECONFIG > /etc/electrumx.conf
    DB_DIRECTORY = /db
    DAEMON_URL = http://${BITCOIN_RPC_USERNAME}:${BITCOIN_RPC_PASSWORD}@127.0.0.1:18444/
    COIN = BitcoinGlobal
    NET=${BITCOIN_NETWORK_TYPE}net
    SSL_CERTFILE=/etc/electrumx/server.crt
    SSL_KEYFILE=/etc/electrumx/server.key
    # TCP_PORT=50001
    # SSL_PORT=50002
    # Listen on all interfaces:
    HOST=
    SERVICECONFIG

    cat <<SERVICE > /etc/systemd/system/electrumx.service
    [Unit]
    Description=Electrumx
    After=network.target

    [Service]
    EnvironmentFile=/etc/electrumx.conf
    ExecStart=/usr/local/bin/electrumx_server
    User=electrumx
    LimitNOFILE=8192
    TimeoutStopSec=30min
    Restart=always
    RestartSec=3

    [Install]
    WantedBy=multi-user.target
    SERVICE

    ### ==============================
    systemctl enable electrumx
    systemctl daemon-reload
    systemctl start electrumx
