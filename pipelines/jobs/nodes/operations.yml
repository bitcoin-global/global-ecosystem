---
meta:
  # Git and GCloud already configured for each operation
  perform_deploy: &perform_deploy
  - (( grab meta.make_node ))
  - (( grab meta.configure_gcloud ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.install_node ))

  perform_destroy: &perform_destroy
  - (( grab meta.destroy_node ))

  perform_stop: &perform_stop
  - (( grab meta.stop_node ))

  perform_update: &perform_update
  - (( grab meta.make_node ))
  - (( grab meta.configure_gcloud ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.update_node ))

  perform_shared: &perform_shared
  - (( grab meta.make_node ))
  - (( grab meta.configure_gcloud ))
  - (( grab meta.wait_for_node ))
  - (( join "\n" meta.run_shared ))

  prepare_node: &prepare_node |
    ### Install required packages
    echo "Prepare machine"
    apt-get update
    apt-get install -y \
      gnupg2 ca-certificates git software-properties-common \
      python3.6 sudo nano ruby wget curl pigz \
      autoconf libssl1.0-dev dirmngr gosu dnsutils gpg wget jq npm
    service apt-cacher-ng restart

    ### Install monitoring
    echo "Install monitoring"
    bash <(curl -Ss https://my-netdata.io/kickstart-static64.sh) --dont-wait --no-updates --stable-channel --disable-telemetry
    /opt/netdata/usr/bin/netdata-claim.sh -token=${NETDATA_INFRA_TOKEN} -rooms=${NETDATA_INFRA_ROOM} -url=https://app.netdata.cloud

  post_git_ops: &post_git_ops |
    ### Install required tools
    mkdir -p /binaries
    mkdir -p /bitcoin-global
    rm -rf ./global-ecosystem
    git clone ${GIT_REPO_ECOSYSTEM} ./global-ecosystem
    chmod +x ./global-ecosystem/src/bitglobal/install-node.sh

  make_node: &make_node |
    ### Deploy Node VM on GCP
    global-ecosystem/scripts/add-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE" \
      --size="$NODE_SIZE" \
      --disk-size="$NODE_DISK_SIZE" \
      --disk-type="$NODE_DISK_TYPE" \
      --tags="bitcoin-global,bitcoin-$NODE_TYPE" \
      --static-ip

    ### Get IP
    VM_REGION=${NODE_ZONE:0:-2}
    IN_LOCATION=$(echo "$NODE_ZONE" | cut -f1 -d"-")
    ADDRESS_NAME=$NODE_NAME-address
    EXTERNAL_IP=$(gcloud compute addresses describe $ADDRESS_NAME --region $VM_REGION --format json | jq '.address' | tr -d '"')
    
    ## LOGIN TO INFRA PROJECT
    ### Configure Google Cloud authentication
    echo "${GCLOUD_INFRA_CREDENTIALS}" > $GOOGLE_APPLICATION_CREDENTIALS
    gcloud auth activate-service-account \
      $SERVICE_INFRA_ACCOUNT --key-file=${GOOGLE_APPLICATION_CREDENTIALS} --project=$GCP_INFRA_PROJECT

    ### ================== Add Explorer server config
    ### Regional A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"
    
    ### ================== Add ElectrumX server config
    ### Regional A record
    global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
      --value="${EXTERNAL_IP}" --domain="electrumx.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
      --project="${GCP_INFRA_PROJECT}"
    
    if [[ "$IN_LOCATION" == "europe" ]]; then
      ### Parent Electrumx record
      global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
        --value="${EXTERNAL_IP}" --domain="electrumx.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
        --project="${GCP_INFRA_PROJECT}"

      ### Parent Explorer record
      global-ecosystem/scripts/dns-record.sh --name="io-bitcoin-global" --type="A" \
        --value="${EXTERNAL_IP}" --domain="${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io" \
        --project="${GCP_INFRA_PROJECT}"
    fi

  wait_for_node: &wait_for_node |
    ### Loop until ready
    echo "Waiting until VM operational..."
    counter=0
    until gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT --command 'echo'; do
        counter=$((counter+1))
        if [[ "$counter" -gt 120 ]]; then
            echo "Timed out!"
            exit 1
        fi
        sleep 1
    done
    echo "Success!"

  install_bitcoin: &install_bitcoin |
    ### Installing Bitcoin Global
    ./global-ecosystem/src/bitglobal/install-node.sh \
      -v ${BITCOIN_VERSION} -r ${BITCOIN_RELEASE} \
      -t /binaries -d ${BITCOIN_DATA_DIR}

    ### Save intro command
    export BTC_COMMAND="${BITCOIN_ENTRYPOINT}"

  update_bitcoin: &update_bitcoin |
    ### Updating Bitcoin Global
    ./global-ecosystem/src/bitglobal/install-node.sh \
      -v ${BITCOIN_UPDATE_VERSION} -r ${BITCOIN_UPDATE_RELEASE} \
      -t /binaries -d ${BITCOIN_DATA_DIR}

    ### Save intro command
    export BTC_COMMAND="${BITCOIN_UPDATE_ENTRYPOINT}"

  run_bitcoin: &run_bitcoin |
    ### Stop Bitcoin Global
    /binaries/bin/bitglob-cli stop || echo "mainnet: Already shutdown"
    /binaries/bin/bitglob-cli -testnet stop || echo "testnet: Already shutdown"
    sleep 1m

    ### Run Bitcoin Global
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf $BITCOIN_ENTRYPOINT

  update_run_bitcoin: &update_run_bitcoin |
    ### Stop Bitcoin Global
    /binaries/bin/bitglob-cli stop || echo "mainnet: Already shutdown"
    /binaries/bin/bitglob-cli -testnet stop || echo "testnet: Already shutdown"
    sleep 1m

    ### Run Bitcoin Global
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf $BITCOIN_UPDATE_ENTRYPOINT


  install_node: &install_node
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.prepare_node ))
    - (( grab meta.configure_git ))
    - (( grab meta.post_git_ops ))
    - (( grab meta.install_bitcoin ))
    - export CERT_TYPE="--test-cert"
    - (( grab meta.certs_config ))
    - (( grab meta.generate_env_config ))
    - (( grab meta.run_bitcoin ))
    - exit
    - EOF

  update_node: &update_node
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.prepare_node ))
    - (( grab meta.configure_git ))
    - (( grab meta.post_git_ops ))
    - (( grab meta.update_bitcoin ))
    - export CERT_TYPE="--test-cert"
    - (( grab meta.certs_config ))
    - (( grab meta.generate_env_config ))
    - (( grab meta.update_run_bitcoin ))
    - exit
    - EOF

  stop_node: &stop_node |
    ### Stop node
    ./global-ecosystem/scripts/remove-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE"

  destroy_node: &destroy_node |
    ### Destroy node
    ./global-ecosystem/scripts/remove-vm.sh \
      --name="$NODE_NAME" \
      --zone="$NODE_ZONE" \
      --destroy

  generate_env_config: &generate_env_config |
    ### =============================
    ### BITGLOB CONFIGURATION
    cat <<CONFIG > /binaries/.bitglobal/bitglob.conf
    listen=1
    maxconnections=64
    upnp=1
    txindex=1

    dbcache=64
    par=2
    checkblocks=24
    checklevel=0

    disablewallet=1
    datadir=${BITCOIN_DATA_DIR}

    rpcallowip=127.0.0.1
    rpcuser=${BITCOIN_RPC_USERNAME}
    rpcpassword=${BITCOIN_RPC_PASSWORD}

    [${BITCOIN_NETWORK_TYPE}]
    port=${BITCOIN_PORT}
    bind=0.0.0.0
    rpcbind=127.0.0.1
    rpcport=18444
    CONFIG

    ### =============================
    ### BITGLOB SERVICE CONFIGURATION
    cat <<SCRIPT > /binaries/bin/bitcoin-startup.sh
    #!/bin/bash
    export GITHUB_TOKEN=${GITHUB_TOKEN}
    
    /binaries/bin/bitglobd -conf=/binaries/.bitglobal/bitglob.conf \$BTC_COMMAND
    pm2 stop "${BITCOIN_NETWORK_TYPE}net-global-explorer" || echo "not there"
    pm2 start /explorer/bin/www --name "${BITCOIN_NETWORK_TYPE}net-global-explorer" || echo "already there"
    SCRIPT
    chmod +x /binaries/bin/bitcoin-startup.sh

    ### =============================
    ### BITGLOB SERVICE CONFIGURATION
    cat <<SERVICE > /etc/systemd/system/bitcoin-startup.service
    [Unit]
    Description=Bitcoin Startup service
    After=network.target

    [Service]
    EnvironmentFile=/etc/explorer-btc.conf
    ExecStart=/binaries/bin/bitcoin-startup.sh
    User=root
    LimitNOFILE=8192
    TimeoutStopSec=30min
    Restart=always
    RestartSec=3

    [Install]
    WantedBy=multi-user.target
    SERVICE

    ### ==============================
    systemctl enable bitcoin-startup
    systemctl daemon-reload
    systemctl start bitcoin-startup

  run_shared: &run_shared
    - gcloud beta compute ssh --zone $NODE_ZONE $NODE_NAME --project $GCP_PROJECT << EOF
    - (( grab meta.configure_git ))
    - (( grab meta.electrum_config ))
    - (( grab meta.certs_config ))
    - exit
    - EOF

  electrum_config: &electrum_config |
    ### ==============================
    ### Install Electrum
    rm -rf ~/.electrumx-installer/
    wget https://raw.githubusercontent.com/bauerj/electrumx-installer/master/bootstrap.sh -O - | \
      bash -s - \
      --leveldb \
      --update-python \
      --electrumx-git-url https://github.com/bitcoin-global/global-electrumx.git \
      --electrumx-git-branch altcoin

    ### ==============================
    ### ELECTRUM SERVICE CONFIGURATION
    cat <<SERVICECONFIG > /etc/electrumx.conf
    DB_DIRECTORY = /db
    DAEMON_URL = http://${BITCOIN_RPC_USERNAME}:${BITCOIN_RPC_PASSWORD}@127.0.0.1:18444/
    COIN = BitcoinGlobal
    NET=${BITCOIN_NETWORK_TYPE}net
    SSL_CERTFILE=/etc/electrumx/server.crt
    SSL_KEYFILE=/etc/electrumx/server.key
    # TCP_PORT=50001
    # SSL_PORT=50002
    # Listen on all interfaces:
    HOST=
    SERVICECONFIG

    cat <<SERVICE > /etc/systemd/system/electrumx.service
    [Unit]
    Description=Electrumx
    After=network.target

    [Service]
    EnvironmentFile=/etc/electrumx.conf
    ExecStart=/usr/local/bin/electrumx_server
    User=electrumx
    LimitNOFILE=8192
    TimeoutStopSec=30min
    Restart=always
    RestartSec=3

    [Install]
    WantedBy=multi-user.target
    SERVICE

    ### ==============================
    systemctl enable electrumx
    systemctl daemon-reload
    systemctl start electrumx
    

  certs_config: &certs_config |
    ### ========================
    ### Install requirements
    apt update -y && apt upgrade -y
    apt install -y git python-software-properties software-properties-common nginx gcc g++ make
    add-apt-repository ppa:certbot/certbot -y
    apt update -y && apt upgrade -y
    apt install -y python-certbot-nginx
    python3 -m pip install cffi
    npm install pm2 --global
    
    IN_LOCATION=$(echo "$NODE_ZONE" | cut -f1 -d"-")
    ADDITIONAL_PARAMS=""
    ADDITIONAL_SERVER=""
    CERT_TYPE=${CERT_TYPE:-}

    ### ========================
    ### Deploy certs
    if [[ "$IN_LOCATION" == "europe" ]]; then
      ADDITIONAL_PARAMS="-d ${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io"
      ADDITIONAL_SERVER="${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io"
    fi
    
    certbot --nginx --agree-tos -n $CERT_TYPE \
      $ADDITIONAL_PARAMS \
      -d explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io \
      -m admin@bitcoin-global.io

    cat <<CERTS > /etc/nginx/sites-available/${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io.conf
    server {
      server_name $ADDITIONAL_SERVER explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io;
      listen 80;
      #listen [::]:80 ipv6only=on;
    
      location / {
        return 301 https://explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io$request_uri;
      }
    }
    
    server {
      server_name $ADDITIONAL_SERVER explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io;
      listen 443 ssl http2;
      #listen [::]:443 ssl http2 ipv6only=on;

      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
      ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
      ssl_prefer_server_ciphers on;
      ssl_session_cache shared:SSL:10m;
      ssl_dhparam /etc/ssl/certs/dhparam.pem;

      ssl_certificate     /etc/letsencrypt/live/explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io/cert.pem;
      ssl_certificate_key /etc/letsencrypt/live/explorer.${IN_LOCATION}.${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io/privkey.pem;

      location / {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
      }
    }
    CERTS
    
    ln -s /etc/nginx/sites-available/${BITCOIN_NETWORK_TYPE}net.bitcoin-global.io.conf /etc/nginx/sites-enabled/
    rm -rf /etc/nginx/sites-enabled/default
    rm -rf /etc/nginx/sites-available/default
    fuser -k 80/tcp
    fuser -k 443/tcp
    service nginx restart
    
    cd /etc/ssl/certs
    openssl dhparam -out dhparam.pem 4096
    
    rm -rf /explorer
    git clone https://github.com/bitcoin-global/explorer.git /explorer
    cd /explorer
    npm install
    
    mkdir -p ~/.config
    cat <<CONFIG > ~/.config/glob-rpc-explorer.env
    BGEXP_HOST=127.0.0.1
    BGEXP_PORT=3002
    BGEXP_BITGLOBD_HOST=127.0.0.1
    BGEXP_BITGLOBD_PORT=18444
    BGEXP_BITGLOBD_USER=${BITCOIN_RPC_USERNAME}
    BGEXP_BITGLOBD_PASS=${BITCOIN_RPC_PASSWORD}
    CONFIG

    pm2 stop "${BITCOIN_NETWORK_TYPE}net-global-explorer" || echo "not there"
    pm2 start /explorer/bin/www --name "${BITCOIN_NETWORK_TYPE}net-global-explorer" || echo "already there"
